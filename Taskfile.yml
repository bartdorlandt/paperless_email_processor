version: "3"

dotenv:
  - .env

vars:
  DOCKER_IMAGE: paperless_email_processor
  REMOTE_PATH: "/Volumes/docker/{{.DOCKER_IMAGE}}"

tasks:
  default:
    cmd: task -l --sort none
    silent: true

  up:
    desc: Start the {{.DOCKER_IMAGE}} docker compose service
    cmds:
      - "{{.SUDO}} docker compose up -d"

  down:
    desc: Stop the {{.DOCKER_IMAGE}} docker compose service
    cmds:
      - "{{.SUDO}} docker compose down"

  rebuild:
    desc: Rebuild the {{.DOCKER_IMAGE}} docker compose service
    cmds:
      - "{{.SUDO}} docker compose up -d --build"

  rmi:
    desc: Stop the {{.DOCKER_IMAGE}} docker compose service
    cmds:
      - "{{.SUDO}} docker compose down --rmi all"

  logs:
    desc: Show logs for the {{.DOCKER_IMAGE}} service
    cmds:
      - "{{.SUDO}} docker compose logs -f {{.DOCKER_IMAGE}}"

  run:
    desc: Run the script with uv
    cmds:
      - uv run main.py

  sync:
    desc: "Sync the files to the remote system"
    cmds:
      - rsync -avz . {{.excludes}} {{.REMOTE_PATH}}/
    vars:
      excludes: >-
        --exclude '.github/'
        --exclude '__pycache__/'
        --exclude '.mypy_cache/'
        --exclude '.pytest_cache/'
        --exclude '.ruff_cache/'
        --exclude '.git'
        --exclude '.venv'
        --exclude '.vscode'
        --exclude '.env'
        --exclude '.envrc'
        --exclude old/
        --exclude 'process_folder/'
        --exclude 'paperless_email_processor.log'

  pytest:
    desc: Run pytest
    cmds:
      - uv run pytest -v

  lint:
    desc: Lint the code
    cmds:
      - uv run ruff check .
      - uv run ruff format . --diff --check

  mypy:
    desc: Run mypy type checking
    cmds:
      - uv run mypy .

  tests:
    desc: Run all tests and checks
    cmds:
      - task: lint
      - task: mypy
      - task: pytest

  fmt:
    desc: Format the code
    cmds:
      - uv run ruff check . --fix
      - uv run ruff format .
